// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  category_id Int        @id @default(autoincrement())
  name        String     @db.VarChar(50)
  products    Products[]
}

model Inventory {
  inventory_id   Int        @id @default(autoincrement())
  inventory_name String     @db.VarChar(50)
  products       Products[]
}

model Products {
  product_id    Int             @id @default(autoincrement())
  category_id   Int
  inventory_id  Int
  stock         Int
  price         Decimal
  product_name  String          @db.VarChar(50)
  description   String?         @db.VarChar(100)
  category      Categories      @relation(fields: [category_id], references: [category_id])
  inventory     Inventory       @relation(fields: [inventory_id], references: [inventory_id])
  orderProducts OrderProducts[]
  createdAt     DateTime        @default(now()) @map("createdAt")
  updatedAt     DateTime        @updatedAt @map("updatedAt")
  deletedAt     DateTime?       @map("deletedAt")
}

model Customers {
  customer_id   Int       @id @default(autoincrement())
  customer_name String    @db.VarChar(50)
  email         String    @db.VarChar(100)
  phone         String?   @db.VarChar(50)
  password      String    @db.VarChar(255)
  orders        Orders[]
  createdAt     DateTime  @default(now()) @map("createdAt")
  updatedAt     DateTime  @updatedAt @map("updatedAt")
  deletedAt     DateTime? @map("deletedAt")
}

model PaymentType {
  payment_type Int       @id @default(autoincrement())
  name         String    @db.VarChar(50)
  orders       Orders[]
  createdAt    DateTime  @default(now()) @map("createdAt")
  updatedAt    DateTime  @updatedAt @map("updatedAt")
  deletedAt    DateTime? @map("deletedAt")
}

model OrderType {
  order_type Int       @id @default(autoincrement())
  name       String    @db.VarChar(50)
  orders     Orders[]
  createdAt  DateTime  @default(now()) @map("createdAt")
  updatedAt  DateTime  @updatedAt @map("updatedAt")
  deletedAt  DateTime? @map("deletedAt")
}

model Orders {
  order_id      Int             @id @default(autoincrement())
  customer_id   Int
  order_date    DateTime        @db.Date
  order_type    Int
  payment_type  Int
  total_paid    Float
  customer      Customers       @relation(fields: [customer_id], references: [customer_id])
  orderType     OrderType       @relation(fields: [order_type], references: [order_type])
  paymentType   PaymentType     @relation(fields: [payment_type], references: [payment_type])
  orderProducts OrderProducts[]
  createdAt     DateTime        @default(now()) @map("createdAt")
  updatedAt     DateTime        @updatedAt @map("updatedAt")
  deletedAt     DateTime?       @map("deletedAt")
}

model OrderProducts {
  shipment_id   Int       @id @default(autoincrement())
  order_id      Int
  product_id    Int
  shipment_date DateTime  @db.Date
  order         Orders    @relation(fields: [order_id], references: [order_id])
  product       Products  @relation(fields: [product_id], references: [product_id])
  createdAt     DateTime  @default(now()) @map("createdAt")
  updatedAt     DateTime  @updatedAt @map("updatedAt")
  deletedAt     DateTime? @map("deletedAt")
}
